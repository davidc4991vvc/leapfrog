= Leapfrog

Leapfrog is a rails plugin for userstamps.
That provides simplify function for userstamps.

Leapfrog has mainly 2 functions.
One is Migration support. Other is data registration support.

Typically, an enterprise system records the user who submitted the data.
But tables do not have created_by/updated_by columns on scaffold generate.

By you are appending one line into a migration file,  then created_by and
updated_by columns are added.

== Installation

  Add to Gemfile following.
  gem 'leapfrog', :git => 'git://github.com/kobayashi-tbn/leapfrog.git'

== Example

Migration

  Add 't.userstamps' to Migration file into change method.

    class CreateUsers < ActiveRecord::Migration
      def change
        create_table(:users, :id => false) do |t|
          t.string :username
          t.string :password
          t.string :email

          t.timestamps
          t.userstamps     # add column 'created_by' and 'updated_by'
        end
      end

      execute "ALTER TABLE users ADD PRIMARY KEY (username)"

    end


  If you want to add column after created tables,
  Then run rails generate migration add_userstamps_to_todo
  and edit the migration file.(ex. Model name is Todo.)


    class AddUserstampsToTodo < ActiveRecord::Migration
      def self.up
        add_userstamps :todos
      end

      def self.down
        remove_userstamps :todos
      end
    end

  'created_by' and 'updated_by' columns type is :string.
  If you use type :integer then, define the following.

    t.userstamps :type => :integer

    add_userstamps :todos, :type => :integer

== Controller

ActionController includes Leapfrog::Controller::Users
and each Controller object was extended Leapfrog::Controller::LfMacro
for get the username or user_id from Leapfrog::UserInfo


== Model

ActiveRecord::Base includes Leapfrog::Model::Observe.
and each Model object was extended Leapfrog::Model::LfMacro
for set data to 'created_by' and 'updated_by' column of the Model.

You need to define 'leapfrog :username' in each Model
If instead of ':username', you use ':user_id' then, define 'leapfrog :user_id'

=== Example

    class Todo < ActiveRecord::Base
       leapfrog :username
    end

  If you use user_id, that type is Integer then...

    class Todo < ActiveRecord::Base
      leapfrog :user_id
    end

== How to get the username

Leapfrog get username/user_id from the session in the Controller, so
you have to set the username into session[:username].
If the key type is :integer then, session[:user_id].

== Customizing the key of session map

  Rails3:
    Add following.
    If instead of :username, you use :user_name.

    app/controllers/application_controller.rb
    add 1 line.
    Leapfrog::UserInfo::USERSTAMP_MAP[:name] = :user_name

== NOTE

  This is alpha version.


Copyright (c) 2011 Toshinobu Kobayashi, released under the MIT license
